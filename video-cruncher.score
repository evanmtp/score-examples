{"Document":{"ObjectName":"Scenario::ScenarioDocumentModel","id":1,"BaseScenario":{"ObjectName":"Scenario::BaseScenario","id":0,"Constraint":{"ObjectName":"Scenario::IntervalModel","id":0,"Metadata":{"ScriptingName":"video-cruncher","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"de035912-5b03-49a8-bc4d-b2cba68e21d9","ObjectName":"Scenario","id":1,"Metadata":{"ScriptingName":"Scenario.1","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":10584000000,"Height":1500.0,"StartOffset":0,"LoopDuration":10584000000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"In","Exposed":"in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"StartTimeNodeId":0,"StartEventId":0,"StartStateId":0,"TimeNodes":[{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.rica44","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":7063662110,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":2,"Metadata":{"ScriptingName":"Sync.july37","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10209932510,"Events":[2],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":3,"Metadata":{"ScriptingName":"Sync.spat65","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":18698400000,"Events":[3],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":4,"Metadata":{"ScriptingName":"Sync.bate3","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":17287200000,"Events":[4],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":5,"Metadata":{"ScriptingName":"Sync.5","Comment":"","Color":"Gray","Label":"","Touched":false},"Date":1411200000,"Events":[5],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "}],"Events":[{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[4,6,7],"Condition":"","Date":0,"Offset":0},{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.lilt22","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":7063662110,"Offset":0},{"ObjectName":"Scenario::EventModel","id":2,"Metadata":{"ScriptingName":"Event.beam50","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":2,"States":[2],"Condition":"","Date":10209932510,"Offset":0},{"ObjectName":"Scenario::EventModel","id":3,"Metadata":{"ScriptingName":"Event.lobo61","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":3,"States":[3,8],"Condition":"","Date":18698400000,"Offset":0},{"ObjectName":"Scenario::EventModel","id":4,"Metadata":{"ScriptingName":"Event.dyad28","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":4,"States":[5],"Condition":"","Date":17287200000,"Offset":0},{"ObjectName":"Scenario::EventModel","id":5,"Metadata":{"ScriptingName":"Event.monk21","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":5,"States":[0,9],"Condition":"","Date":1411200000,"Offset":0}],"States":[{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":5,"PreviousConstraint":5,"NextConstraint":1,"HeightPercentage":0.03933333333333333,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.shiv27","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":1,"NextConstraint":2,"HeightPercentage":0.03933333333333333,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":2,"Metadata":{"ScriptingName":"State.clog11","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":2,"NextConstraint":3,"HeightPercentage":0.03933333333333333,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":3,"Metadata":{"ScriptingName":"State.tapa83","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":3,"PreviousConstraint":3,"NextConstraint":null,"HeightPercentage":0.03933333333333333,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":4,"Metadata":{"ScriptingName":"State.mode53","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":4,"HeightPercentage":0.13866666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":5,"Metadata":{"ScriptingName":"State.tang44","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":4,"PreviousConstraint":4,"NextConstraint":null,"HeightPercentage":0.13866666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":6,"Metadata":{"ScriptingName":"State.doge64","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":null,"HeightPercentage":0.03,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":7,"Metadata":{"ScriptingName":"State.tone96","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":5,"HeightPercentage":0.04,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":8,"Metadata":{"ScriptingName":"State.bass48","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":3,"PreviousConstraint":null,"NextConstraint":6,"HeightPercentage":0.011333333333333338,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":9,"Metadata":{"ScriptingName":"State.pays64","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":5,"PreviousConstraint":6,"NextConstraint":null,"HeightPercentage":0.014000000000000004,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}],"Constraints":[{"ObjectName":"Scenario::IntervalModel","id":1,"Metadata":{"ScriptingName":"bombero(720P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"32dc5341-7748-4c31-a226-82e6bd685744","ObjectName":"VideoProcess","id":1,"Metadata":{"ScriptingName":"bombero(720P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":5652462110,"Height":300.0,"StartOffset":0,"LoopDuration":7159761302,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":true,"Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":0,"Hidden":false}],"FilePath":"media/avión(720P_HD).mp4","Scale":1,"Tempo":120.0,"IgnoreTempo":false}],"SmallViewRack":[{"Processes":[1],"Process":1,"Height":55.0,"Nodal":false}],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":5652462110,"MinDuration":5652462110,"MaxDuration":5652462110,"GuiDuration":6217708321,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":0,"EndState":1,"StartDate":1411200000,"HeightPercentage":0.03933333333333333,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":2,"Metadata":{"ScriptingName":"cenicero(1080P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"32dc5341-7748-4c31-a226-82e6bd685744","ObjectName":"VideoProcess","id":1,"Metadata":{"ScriptingName":"cenicero(1080P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":3146270400,"Height":300.0,"StartOffset":0,"LoopDuration":3146270400,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":true,"Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":0,"Hidden":false}],"FilePath":"media/cenicero(1080P_HD).mp4","Scale":1,"Tempo":120.0,"IgnoreTempo":false}],"SmallViewRack":[{"Processes":[1],"Process":1,"Height":55.0,"Nodal":false}],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":3146270400,"MinDuration":3146270400,"MaxDuration":3146270400,"GuiDuration":3460897440,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":1,"EndState":2,"StartDate":7063662110,"HeightPercentage":0.03933333333333333,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":3,"Metadata":{"ScriptingName":"corona(720P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"32dc5341-7748-4c31-a226-82e6bd685744","ObjectName":"VideoProcess","id":1,"Metadata":{"ScriptingName":"corona(720P_HD)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":8488467490,"Height":300.0,"StartOffset":0,"LoopDuration":8306676000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":true,"Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":0,"Hidden":false}],"FilePath":"media/corona(720P_HD).mp4","Scale":1,"Tempo":120.0,"IgnoreTempo":false}],"SmallViewRack":[{"Processes":[1],"Process":1,"Height":55.0,"Nodal":false}],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":8488467490,"MinDuration":8488467490,"MaxDuration":8488467490,"GuiDuration":9137343600,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":2,"EndState":3,"StartDate":10209932510,"HeightPercentage":0.03933333333333333,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":4,"Metadata":{"ScriptingName":"Interval.fool4","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":13,"Metadata":{"ScriptingName":"Echo Trace","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[918.7462664405191,-114.86649900152338],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Feedback\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"DESCRIPTION\": \"Pixel with brightness levels below the threshold do not update.\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Threshold\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"thresh\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"LABEL\": \"Gain\",\n            \"MAX\": 2,\n            \"MIN\": 0,\n            \"NAME\": \"gain\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": true,\n            \"LABEL\": \"Hard Cutoff\",\n            \"NAME\": \"hardCutoff\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": false,\n            \"LABEL\": \"Invert\",\n            \"NAME\": \"invert\",\n            \"TYPE\": \"bool\"\n        }\n    ],\n    \"ISFVSN\": \"2\",\n    \"PASSES\": [\n        {\n            \"FLOAT\": true,\n            \"PERSISTENT\": true,\n            \"TARGET\": \"bufferVariableNameA\"\n        },\n        {\n        }\n    ]\n}\n*/\n\nvoid main()\n{\n\tvec4\t\tfreshPixel = IMG_PIXEL(inputImage,gl_FragCoord.xy);\n\tvec4\t\tstalePixel = IMG_PIXEL(bufferVariableNameA,gl_FragCoord.xy);\n\tfloat\t\tbrightLevel = (freshPixel.r + freshPixel.b + freshPixel.g) / 3.0;\n\tif (invert)\n\t\tbrightLevel = 1.0 - brightLevel;\n\tbrightLevel = brightLevel * gain;\n\tif (hardCutoff)\t{\n\t\tif (brightLevel < thresh)\n\t\t\tbrightLevel = 1.0;\n\t\telse\n\t\t\tbrightLevel = 0.0;\n\t}\n\tgl_FragColor = mix(freshPixel,stalePixel, brightLevel);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"thresh","Exposed":"thresh","Value":{"Float":0.053752459585666656},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"gain","Exposed":"gain","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"hardCutoff","Exposed":"hardcutoff","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"invert","Exposed":"invert","Value":{"Bool":false},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false,"Address":"Window:/"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":12,"Metadata":{"ScriptingName":"Noise Displace","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[231.874988632021,-91.26745870812476],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"CATEGORIES\" : [\n    \"Distortion Effect\", \"Noise\"\n  ],\n  \"DESCRIPTION\" : \"Displaces image randomly\",\n  \"ISFVSN\" : \"2\",\n  \"INPUTS\" : [\n    {\n      \"NAME\" : \"inputImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"NAME\" : \"displaceX\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.0,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Displace X\"\n    },\n    {\n      \"NAME\" : \"displaceY\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.0,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Displace Y\"\n    },\n    {\n      \"NAME\" : \"detailX\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 1.0,\n      \"DEFAULT\" : 0.1,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Detail X\"\n    },\n    {\n      \"NAME\" : \"detailY\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 1.0,\n      \"DEFAULT\" : 0.1,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Detail Y\"\n    },\n    {\n      \"NAME\" : \"updateTime\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.01,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Frequency\"\n    }\n  ],\n  \"CREDIT\" : \"VIDVOX\"\n}\n*/\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main()\t{\n\n\tvec4 inputPixelColor;\n\tvec2 uv = isf_FragNormCoord.xy;\n\tfloat wobbleTime = (updateTime == 0.0) ? TIME : floor(TIME/updateTime);\n\tvec2 waveLoc = fract((uv)*vec2(detailX, detailY));\n\tfloat val1 = rand(vec2(waveLoc.x, wobbleTime));\n\tfloat val2 = rand(vec2(waveLoc.y, wobbleTime+1.0));\n\tvec2 wave = vec2(val1, val2)-0.5;\n\twave *= vec2(displaceY, displaceX);\n\n\tinputPixelColor = IMG_NORM_PIXEL(inputImage, uv + wave.yx);\n\n\tgl_FragColor = inputPixelColor;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"displaceX","Exposed":"displacex","Value":{"Float":0.002884615445509553},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"displaceY","Exposed":"displacey","Value":{"Float":0.002884615445509553},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"detailX","Exposed":"detailx","Value":{"Float":0.807692289352417},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"detailY","Exposed":"detaily","Value":{"Float":0.7980769276618958},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"updateTime","Exposed":"updatetime","Value":{"Float":0.009999999776482582},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":11,"Metadata":{"ScriptingName":"FeedBackGlitch","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[190.3610292255844,-518.8277141067294],"Size":[115.6875,22.0],"Loops":false,"Vertex":"void main() {\n  isf_vertShaderInit();\n}","Fragment":"/*{\n  \"DESCRIPTION\": \"RGB GLitchMod\",\n  \"CREDIT\": \"by dantheman\",\n  \"CATEGORIES\": [\n    \"Distortion Effect\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"inputImage\",\n      \"TYPE\": \"image\"\n    },\n    {\n      \"NAME\": \"offset\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"offset_right\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0,\n      \"MAX\": 0.1\n    },\n    {\n      \"NAME\": \"mix_var\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0,\n      \"MAX\": 1\n    }\n  ],\n  \"PASSES\": [\n    {\n      \"TARGET\": \"one\",\n      \"WIDTH\": \"$WIDTH\",\n      \"HEIGHT\": \"$HEIGHT\",\n      \"DESCRIPTION\": \"buffer\",\n      \"persistent\": true\n    }\n  ]\n}*/\n\nfloat box(vec2 _st, vec2 _size, float _smoothEdges){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 aa = vec2(_smoothEdges*0.5);\n    vec2 uv = smoothstep(_size,_size+aa,_st);\n    uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat random (vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.0) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.0-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\n\nfloat noise (vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\nfloat lines(vec2 pos, float scale, float b){\n    pos *= scale;\n    return smoothstep(0.0,\n                    .5+b*.5,\n                    abs((sin(pos.x*3.1415)+b*1.0))*.5);\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvoid main() {\n  \n  vec2 pos = isf_FragNormCoord;\n  vec4 old = IMG_NORM_PIXEL(one, pos);\n  vec4 new = IMG_NORM_PIXEL(inputImage, pos);\n  vec4 U = vec4(0.0);\n  \n  U =IMG_NORM_PIXEL(one, isf_FragNormCoord+vec2(offset*0.01))*mix_var + IMG_NORM_PIXEL(one, isf_FragNormCoord-vec2(offset*0.01))*mix_var;\n\n\n  gl_FragColor =(new)+(U-old/2.0);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"offset","Exposed":"offset","Value":{"Float":0.051044777035713196},"Domain":{"Float":{"Min":0.0,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"offset_right","Exposed":"offset_right","Value":{"Float":0.018468018621206284},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"mix_var","Exposed":"mix_var","Value":{"Float":0.15714997053146362},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":10,"Metadata":{"ScriptingName":"fx_Glitchy_feedback_tlXSR8","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[142.45846991489634,-343.7356007642142],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"IMPORTED\" : [\n\n  ],\n  \"CATEGORIES\" : [\n    \"Automatically Converted\",\n    \"Shadertoy\"\n  ],\n  \"DESCRIPTION\" : \"Automatically converted from https:\\/\\/www.shadertoy.com\\/view\\/tlXSR8 by qat.  Ported from Max\\/MSP.\",\n  \"PASSES\" : [\n    {\n      \"TARGET\" : \"BufferA\",\n      \"PERSISTENT\" : true,\n      \"FLOAT\" : true\n    }\n  ],\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"inputImage\"\n    },\n    {\n\t\t\t\"NAME\": \"amt_p\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.31,\n\t\t\t\"MIN\": -2.0,\n\t\t\t\"MAX\": 2.0\n\t\t},\n\t\t {\n\t\t\t\"NAME\": \"sin_speed\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.75,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 3.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"fnc\",\n\t\t\t\"TYPE\": \"long\",\n\t\t\t\"VALUES\": [\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3,\n\t\t\t\t4,\n\t\t\t\t5\n\t\t\t],\n\t\t\t\"LABELS\": [\n\t\t\t\t\"sin\",\n\t\t\t\t\"cos\",\n\t\t\t\t\"tan\",\n\t\t\t\t\"frct\",\n\t\t\t\t\"sign\"\n\t\t\t],\n\t\t\t\"DEFAULT\": 1\n\t\t}\n    \n  ]\n}\n*/\n\n\nvoid main() {\n\tif (PASSINDEX == 0)\t{\n\t\t\n\t\tfloat amt;\n\t\t\n\t\tif(fnc==1){\n\t    \tamt =  sin(TIME*sin_speed) * amt_p;\n\t\t}\n\t\tif(fnc==2){\n\t    \tamt =  cos(TIME*sin_speed) * amt_p;\n\t\t}\n\t\tif(fnc==3){\n\t    \tamt =  tan(TIME*sin_speed) * amt_p;\n\t\t}\n\t\tif(fnc==4){\n\t    \tamt =  fract(TIME*sin_speed) * amt_p;\n\t\t}\n\t\tif(fnc==5){\n\t    \tamt =  sign(TIME*sin_speed) * amt_p;\n\t\t}\n\t\t\n\t    vec2 uv = gl_FragCoord.xy/RENDERSIZE.xy;\n\t    \n\t    vec3 c = IMG_NORM_PIXEL(inputImage,mod(uv,1.0)).rgb;\n\t    \n\t    vec3 d = IMG_NORM_PIXEL(BufferA,mod(uv,1.0)).rgb;\n\t \td *= amt;\n\t    \n\t\tvec3 e = IMG_NORM_PIXEL(inputImage,mod(uv + d.r,1.0)).rgb;\n\t    vec3 f = IMG_NORM_PIXEL(inputImage,mod(uv + d.g,1.0)).rgb;\n\t    vec3 g = IMG_NORM_PIXEL(inputImage,mod(uv + d.b,1.0)).rgb;\n\t    vec3 h = vec3(e.r,f.g,g.b);\n\t    \n\t    gl_FragColor = vec4(h,1.);\n\t}\n\telse if (PASSINDEX == 1)\t{\n\n\n\t    vec3 c = IMG_NORM_PIXEL(BufferA,mod(gl_FragCoord.xy / RENDERSIZE.xy,1.0)).rgb;\n\t  \n\t    gl_FragColor = vec4(c,1.);\n\t}\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"amt_p","Exposed":"amt_p","Value":{"Float":0.3100000023841858},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"sin_speed","Exposed":"sin_speed","Value":{"Float":0.75},"Domain":{"Float":{"Min":0.0,"Max":3.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"fnc","Exposed":"fnc","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5]}},"Values":[["sin",{"Int":1}],["cos",{"Int":2}],["tan",{"Int":3}],["frct",{"Int":4}],["sign",{"Int":5}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":9,"Metadata":{"ScriptingName":"VHS Glitch.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[264.6925867766522,140.24542951273804],"Size":[109.765625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Glitch\",\n        \"Retro\"\n    ],\n    \"CREDIT\": \"David Lublin, original by Staffan Widegarn Åhlvik\",\n    \"DESCRIPTION\": \"VHS Glitch Style\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"NAME\": \"autoScan\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"xScanline\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"xScanline2\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"yScanline\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"xScanlineSize\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.25,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"xScanlineSize2\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.25,\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"yScanlineAmount\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 3,\n            \"MIN\": 0,\n            \"NAME\": \"grainLevel\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"NAME\": \"scanFollow\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"MAX\": 10,\n            \"MIN\": 0,\n            \"NAME\": \"analogDistort\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"MAX\": 3,\n            \"MIN\": 0,\n            \"NAME\": \"bleedAmount\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"bleedDistort\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"MAX\": 2,\n            \"MIN\": 0,\n            \"NAME\": \"bleedRange\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                0.8,\n                0,\n                0.4,\n                1\n            ],\n            \"NAME\": \"colorBleedL\",\n            \"TYPE\": \"color\"\n        },\n        {\n            \"DEFAULT\": [\n                0,\n                0.5,\n                0.75,\n                1\n            ],\n            \"NAME\": \"colorBleedC\",\n            \"TYPE\": \"color\"\n        },\n        {\n            \"DEFAULT\": [\n                0.8,\n                0,\n                0.4,\n                1\n            ],\n            \"NAME\": \"colorBleedR\",\n            \"TYPE\": \"color\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n\n\n\n//\tBased on https://github.com/staffantan/unity-vhsglitch\n//\tConverted by David Lublin / VIDVOX\n\n\nconst float tau = 6.28318530718;\n\n\nfloat rand(vec3 co){\n\treturn abs(mod(sin( dot(co.xyz ,vec3(12.9898,78.233,45.5432) )) * 43758.5453, 1.0));\n}\n\nvoid main()\t{\n\tfloat\tactualXLine = (!autoScan) ? xScanline : mod(xScanline + ((1.0+sin(0.34*TIME))/2.0 + (1.0+sin(TIME))/3.0 + (1.0+cos(2.1*TIME))/3.0 + (1.0+cos(0.027*TIME))/2.0)/3.5,1.0);\n\tfloat\tactualXLineWidth = (!autoScan) ? xScanlineSize : xScanlineSize + ((1.0+sin(1.2*TIME))/2.0 + (1.0+cos(3.91*TIME))/3.0 + (1.0+cos(0.014*TIME))/2.0)/3.5;\n\tvec2\tloc = isf_FragNormCoord;\n\tvec4\tvhs = IMG_NORM_PIXEL(inputImage, loc);\n\tfloat\tdx = 1.0+actualXLineWidth/25.0-abs(distance(loc.y, actualXLine));\n\tfloat\tdx2 = 1.0+xScanlineSize2/10.0-abs(distance(loc.y, xScanline2));\n\tfloat\tdy = (1.0-abs(distance(loc.y, yScanline)));\n\tif (autoScan)\n\t\tdy = (1.0-abs(distance(loc.y, mod(yScanline+TIME,1.0))));\n\t\n\tdy = (dy > 0.5) ? 2.0 * dy : 2.0 * (1.0 - dy);\n\t\n\tfloat\trX = (scanFollow) ? rand(vec3(dy,actualXLine,analogDistort)) : rand(vec3(dy,bleedAmount,analogDistort));\n\tfloat\txTime = (actualXLine > 0.5) ? 2.0 * actualXLine : 2.0 * (1.0 - actualXLine);\n\t\n\tloc.x += yScanlineAmount * dy * 0.025 + analogDistort * rX/(RENDERSIZE.x/2.0);\n\t\n\tif(dx2 > 1.0 - xScanlineSize2 / 10.0)\t{\n\t\tfloat\trX2 = (dy * rand(vec3(dy,dx2,dx+TIME)) + dx2) / 4.0;\n\t\tfloat\tdistortAmount = analogDistort * (sin(rX * tau / dx2) + cos(rX * tau * 0.78 / dx2)) / 10.0;\n\t\t//loc.y = xScanline2;\n\t\t//loc.x += (1.0 + distortAmount * sin(tau * (loc.x) / rX2 ) - 1.0) / 15.0;\n\t\tloc.x += (1.0 + distortAmount * sin(tau * (loc.x) / rX2 ) - 1.0) / 15.0;\n\t}\n\tif(dx > 1.0 - actualXLineWidth / 25.0)\n\t\tloc.y = actualXLine;\n\n\tloc.x = mod(loc.x,1.0);\n\tloc.y = mod(loc.y,1.0);\n\t\n\tvec4\tc = IMG_NORM_PIXEL(inputImage, loc);\n\tfloat\tx = (loc.x*320.0)/320.0;\n\tfloat\ty = (loc.y*240.0)/240.0;\n\tfloat\tbleed = 0.0;\n\t\n\tif (scanFollow)\n\t\tc -= rand(vec3(x, y, xTime)) * xTime / (5.0-grainLevel);\n\telse\n\t\tc -= rand(vec3(x, y, bleedAmount)) * (bleedAmount/20.0) / (5.0-grainLevel);\n\t\n\tif (bleedAmount > 0.0)\t{\n\t\tIMG_NORM_PIXEL(inputImage, loc + vec2(0.01, 0)).r;\n\t\tbleed += IMG_NORM_PIXEL(inputImage, loc + bleedRange * vec2(0.02, 0)).r;\n\t\tbleed += IMG_NORM_PIXEL(inputImage, loc + bleedRange * vec2(0.01, 0.01)).r;\n\t\tbleed += IMG_NORM_PIXEL(inputImage, loc + bleedRange * vec2(-0.02, 0.02)).r;\n\t\tbleed += IMG_NORM_PIXEL(inputImage, loc + bleedRange * vec2(0.0, -0.03)).r;\n\t\tbleed /= 6.0;\n\t\tbleed *= bleedAmount;\n\t}\n\n\tif (bleed > 0.1){\n\t\tfloat\tbleedFreq = 1.0;\n\t\tfloat\tbleedX = 0.0;\n\t\tif (autoScan)\n\t\t\tbleedX = x + bleedDistort * (yScanlineAmount + (1.5 + cos(TIME / 13.0 + tau*(bleedDistort+(1.0-loc.y))))/2.0) * sin((TIME / 9.0 + bleedDistort) * tau + loc.y * loc.y * tau * bleedFreq) / 8.0;\n\t\telse\n\t\t\tbleedX = x + (yScanlineAmount + (1.0 + sin(tau*(bleedDistort+loc.y)))/2.0) * sin(bleedDistort * tau + loc.y * loc.y * tau * bleedFreq) / 10.0;\n\t\tvec4\tcolorBleed = (bleedX < 0.5) ? mix(colorBleedL, colorBleedC, 2.0 * bleedX) : mix(colorBleedR, colorBleedC, 2.0 - 2.0 * bleedX);\n\t\tif (scanFollow)\n\t\t\tc += bleed * max(xScanlineSize,xTime) * colorBleed;\n\t\telse\n\t\t\tc += bleed * colorBleed;\n\t}\n\tgl_FragColor = c;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"autoScan","Exposed":"autoscan","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"xScanline","Exposed":"xscanline","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"xScanline2","Exposed":"xscanline2","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"yScanline","Exposed":"yscanline","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"xScanlineSize","Exposed":"xscanlinesize","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"xScanlineSize2","Exposed":"xscanlinesize2","Value":{"Float":0.25},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"yScanlineAmount","Exposed":"yscanlineamount","Value":{"Float":0.25},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"grainLevel","Exposed":"grainlevel","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":3.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"scanFollow","Exposed":"scanfollow","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"analogDistort","Exposed":"analogdistort","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"bleedAmount","Exposed":"bleedamount","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"bleedDistort","Exposed":"bleeddistort","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"bleedRange","Exposed":"bleedrange","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"colorBleedL","Exposed":"colorbleedl","Value":{"Vec4f":[0.800000011920929,0.0,0.4000000059604645,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"colorBleedC","Exposed":"colorbleedc","Value":{"Vec4f":[0.0,0.5,0.75,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"colorBleedR","Exposed":"colorbleedr","Value":{"Vec4f":[0.800000011920929,0.0,0.4000000059604645,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":7,"Metadata":{"ScriptingName":"Resize Glitch","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[196.9682787856793,65.91387196167034],"Size":[108.3125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Glitch\",\n        \"Geometry Adjustment\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"randomFrequency\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"NAME\": \"glitchNow\",\n            \"TYPE\": \"event\"\n        },\n        {\n            \"DEFAULT\": 2,\n            \"MAX\": 10,\n            \"MIN\": 0.01,\n            \"NAME\": \"levelX\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 2,\n            \"MAX\": 10,\n            \"MIN\": 0.01,\n            \"NAME\": \"levelY\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                0.5,\n                0.5\n            ],\n            \"MAX\": [\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0\n            ],\n            \"NAME\": \"center\",\n            \"TYPE\": \"point2D\"\n        },\n        {\n            \"DEFAULT\": true,\n            \"NAME\": \"randomizeWidth\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": true,\n            \"NAME\": \"randomizeHeight\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": true,\n            \"NAME\": \"randomizeCenter\",\n            \"TYPE\": \"bool\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid main() {\n\tvec2\t\tloc;\n\tvec2\t\tmodifiedCenter;\n\t\n\tloc = isf_FragNormCoord;\n\tmodifiedCenter = (randomizeCenter) ? vec2(random(vec2(TIME*1.24,0.234)),random(vec2(TIME*2.93,1.234))) : center;\n\t\n\tfloat\t\tnewWidth = 1.0;\n\tfloat\t\tnewHeight = 1.0;\n\t\n\tbool\t\tdoGlitch = false;\n\t\n\tif (glitchNow)\t{\n\t\tdoGlitch = true;\n\t}\n\telse if (randomFrequency == 1.0)\t{\n\t\tdoGlitch = true;\n\t}\n\telse\t{\n\t\tfloat\tval = random(vec2(TIME,0.2321));\n\t\tif (val <= randomFrequency)\t{\n\t\t\tdoGlitch = true;\n\t\t}\n\t}\n\t\n\tif (doGlitch == true)\t{\n\t\tnewWidth = (randomizeWidth == false) ? levelX : levelX * random(vec2(TIME+0.315,FRAMEINDEX+32));\n\t\tnewHeight = (randomizeHeight == false) ? levelY : levelY * random(vec2(TIME+0.942,FRAMEINDEX+43));\n\t}\n\t\n\tloc.x = (loc.x - modifiedCenter.x)*(1.0/newWidth) + modifiedCenter.x;\n\tloc.y = (loc.y - modifiedCenter.y)*(1.0/newHeight) + modifiedCenter.y;\n\tif ((loc.x < 0.0)||(loc.y < 0.0)||(loc.x > 1.0)||(loc.y > 1.0))\t{\n\t\tgl_FragColor = vec4(0.0);\n\t}\n\telse\t{\n\t\tgl_FragColor = IMG_NORM_PIXEL(inputImage,loc);\n\t}\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"randomFrequency","Exposed":"randomfrequency","Value":{"Float":0.75},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"feb87e84-e0d2-428f-96ff-a123ac964f59","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"glitchNow","Exposed":"glitchnow","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"levelX","Exposed":"levelx","Value":{"Float":0.25975000858306885},"Domain":{"Float":{"Min":0.009999999776482582,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"levelY","Exposed":"levely","Value":{"Float":0.25975000858306885},"Domain":{"Float":{"Min":0.009999999776482582,"Max":10.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"center","Exposed":"center","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"randomizeWidth","Exposed":"randomizewidth","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"randomizeHeight","Exposed":"randomizeheight","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"randomizeCenter","Exposed":"randomizecenter","Value":{"Bool":true},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"1e17e479-3513-44c8-a8a7-017be9f6ac8a","ObjectName":"Process::ProcessModel","id":6,"Metadata":{"ScriptingName":"LFO","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[-178.607444142691,146.897454727973],"Size":[330.0,130.0],"Loops":false,"Inlets":[{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Frequency","Exposed":"frequency","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.009999999776482582,"Max":100.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Ampl.","Exposed":"ampl.","Value":{"Float":0.07619047909975052},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Offset","Exposed":"offset","Value":{"Float":0.15523815155029297},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Jitter","Exposed":"jitter","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Phase","Exposed":"phase","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Waveform","Exposed":"waveform","Value":{"String":"Sample & Hold"},"Domain":{"String":{"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"]}},"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"],"Pixmaps":[":/icons/wave_sin_off.png",":/icons/wave_sin_on.png",":/icons/wave_triangle_off.png",":/icons/wave_triangle_on.png",":/icons/wave_saw_off.png",":/icons/wave_saw_on.png",":/icons/wave_square_off.png",":/icons/wave_square_on.png",":/icons/wave_sample_and_hold_off.png",":/icons/wave_sample_and_hold_on.png",":/icons/wave_noise1_off.png",":/icons/wave_noise1_on.png",":/icons/wave_noise2_off.png",":/icons/wave_noise2_on.png",":/icons/wave_noise3_off.png",":/icons/wave_noise3_on.png"]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Quantification","Exposed":"quantification","Value":{"Float":0.125},"Domain":{"Float":{"Values":[0.0,1.0,0.5,0.25,0.125,0.0625,0.03125,0.015625,0.75,0.375,0.1875,0.09375,0.046875]}},"Values":[["None",{"Float":0.0}],["Whole",{"Float":1.0}],["Half",{"Float":0.5}],["4th",{"Float":0.25}],["8th",{"Float":0.125}],["16th",{"Float":0.0625}],["32th",{"Float":0.03125}],["64th",{"Float":0.015625}],["Dotted Half",{"Float":0.75}],["Dotted 4th",{"Float":0.375}],["Dotted 8th",{"Float":0.1875}],["Dotted 16th",{"Float":0.09375}],["Dotted 32th",{"Float":0.046875}]]}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"out","Exposed":"out"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":5,"Metadata":{"ScriptingName":"Poly Glitch","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[92.015613632021,-91.26745870812476],"Size":[99.859375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"CATEGORIES\": [\n\t\t\"Stylize\", \"Glitch\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"randomSeed\",\n\t\t\t\"LABEL\": \"Random Seed\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.01,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.239\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"sizeSpread\",\n\t\t\t\"LABEL\": \"Poly Size\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 0.25,\n\t\t\t\"DEFAULT\": 0.025\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"sizeGain\",\n\t\t\t\"LABEL\": \"Size Gain\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 1.0,\n\t\t\t\"MAX\": 2.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"sampleMode\",\n\t\t\t\"LABEL\": \"Sample Mode\",\n\t\t\t\"VALUES\": [\n\t\t\t\t0,\n\t\t\t\t1\n\t\t\t],\n\t\t\t\"LABELS\": [\n\t\t\t\t\"Single\",\n\t\t\t\t\"Double\"\n\t\t\t],\n\t\t\t\"DEFAULT\": 0,\n\t\t\t\"TYPE\": \"long\"\n\t\t}\n\t]\n}*/\n\n\nconst float MaxPointCount = 5.0;\nfloat divisions = 1.0 / sizeSpread;\n\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat sign(vec2 p1, vec2 p2, vec2 p3)\t{\n\treturn (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nbool PointInTriangle(vec2 pt, vec2 v1, vec2 v2, vec2 v3)\t{\n\tbool b1, b2, b3;\n\n\tb1 = sign(pt, v1, v2) < 0.0;\n\tb2 = sign(pt, v2, v3) < 0.0;\n\tb3 = sign(pt, v3, v1) < 0.0;\n\n\treturn ((b1 == b2) && (b2 == b3));\n}\n\nvec2 AvgPointForTriangle(vec2 p1, vec2 p2, vec2 p3)\t{\n\treturn (p1 + p2 + p3) / 3.0;\t\n}\n\nfloat AreaOfTriangle(vec2 p1, vec2 p2, vec2 p3)\t{\n\treturn abs(p1.x*(p2.y-p3.y)+p2.x*(p3.y-p1.y)+p3.x*(p1.y-p2.y))/2.0;\t\n}\n\nvec4 ColorForPtIndex(vec2 index1, vec2 index2, float sizeAmount, float theSeed, vec2 pt)\t{\n\tvec4\treturnMe = vec4(0.0);\n\tvec2\tpt1, pt2, pt3;\n\tvec2\toffset1 = (index1 + divisions / 2.0) * sizeAmount + sizeAmount / 2.0;\n\tvec2\toffset2 = (index2 + divisions / 2.0) * sizeAmount + sizeAmount / 2.0;\n\tfloat\tadjustedSizeAmount = sizeAmount * sizeGain;\n\tvec2\tinPoint = pt + vec2(0.5);\n\t\n\t\n\tpt1 = vec2(rand(vec2(theSeed+index1.x,2.187*theSeed+index1.x)),rand(vec2(theSeed+index1.y,0.823*theSeed+index1.y)));\n\tpt2 = pt1 + vec2(rand(vec2(theSeed+index1.x,5.326*theSeed+index1.x)),rand(vec2(theSeed+index1.y,1.421*theSeed+index1.y)));\n\tpt3 = pt1 - vec2(rand(vec2(theSeed+index2.x,1.935*theSeed+index2.x)),rand(vec2(theSeed+index2.y,3.177*theSeed+index2.y)));\n\t\n\tfloat\tarea = AreaOfTriangle(pt1,pt2,pt3);\n\t\n\tif (area < 0.5)\t{\n\t\tpt1 = 1.0 - pt1;\n\t\tadjustedSizeAmount = adjustedSizeAmount * (2.5-area);\n\t}\n\telse if (area > 0.5)\t{\n\t\t//pt3 = 1.0-pt3;\n\t}\n\t\n\tpt1 = clamp(pt1 * adjustedSizeAmount + offset1 - adjustedSizeAmount / 2.0,0.0,1.0);\n\tpt2 = clamp(pt2 * adjustedSizeAmount + offset1 - adjustedSizeAmount / 2.0,0.0,1.0);\n\tpt3 = clamp(pt3 * adjustedSizeAmount + offset2 - adjustedSizeAmount / 2.0,0.0,1.0);\n\t\n\tif(PointInTriangle(inPoint,pt1,pt2,pt3))\t{\n\t\tvec2\tavgPt = AvgPointForTriangle(pt1,pt2,pt3);\n\t\treturnMe = IMG_NORM_PIXEL(inputImage,avgPt);\n\t\tif (sampleMode==1)\t{\n\t\t\treturnMe.a = 0.5;\n\t\t\treturnMe.rgb = returnMe.rgb * returnMe.a;\n\t\t}\n\t\telse\t{\n\t\t\treturnMe.a = 1.0;\n\t\t}\n\t}\n\t\n\treturn returnMe;\n}\n\n\n\nvoid main() {\t\n\tvec4\t\tresult = vec4(0.0);\n\tvec2\t\tthisPoint = vv_FragNormCoord - vec2(0.5);\n\tfloat\t\tinSpread = sizeSpread;\n\tvec2\t\tptIndex = floor(thisPoint / inSpread);\n\tvec4\t\toriginal = IMG_THIS_NORM_PIXEL(inputImage);\n\tfloat\t\tpointCount = MaxPointCount + float(sampleMode);\n\t\n\tif (sizeSpread > 0.0)\t{\t\t\n\t\tinSpread = sizeSpread * 1.0;\n\t\tfor (float i=0.0;i<pointCount;++i)\t{\n\t\t\tif (result.a>0.667)\n\t\t\t\tbreak;\n\t\t\tfloat\ttmpSpread = inSpread;\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex,ptIndex+vec2(1.0,0.0),tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex,ptIndex+vec2(-1.0,0.0),tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex,ptIndex+vec2(0.0,1.0),tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex,ptIndex+vec2(0.0,-1.0),tmpSpread,i+randomSeed,thisPoint);\t\n\t\t\t\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex+vec2(-1.0,0.0),ptIndex,tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex+vec2(0.0,1.0),ptIndex,tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex+vec2(0.0,-1.0),ptIndex,tmpSpread,i+randomSeed,thisPoint);\n\t\t\tif (result.a<=0.75)\n\t\t\t\tresult += ColorForPtIndex(ptIndex+vec2(1.0,0.0),ptIndex,tmpSpread,i+randomSeed,thisPoint);\n\t\t}\n\t\tif (result.a<1.0)\n\t\t\tresult += (2.0 - result.a) * ColorForPtIndex(ptIndex,ptIndex,inSpread,randomSeed,thisPoint);\n\t\tif (sampleMode==0)\n\t\t\tresult.a = original.a;\n\t}\n\telse\t{\n\t\tresult = original;\n\t}\n\tgl_FragColor = result;\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"randomSeed","Exposed":"randomseed","Value":{"Float":0.5872477889060974},"Domain":{"Float":{"Min":0.009999999776482582,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"sizeSpread","Exposed":"sizespread","Value":{"Float":0.018356123939156532},"Domain":{"Float":{"Min":0.0,"Max":0.25}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"sizeGain","Exposed":"sizegain","Value":{"Float":1.175355315208435},"Domain":{"Float":{"Min":1.0,"Max":2.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"sampleMode","Exposed":"samplemode","Value":{"Int":1},"Domain":{"Int":{"Values":[0,1]}},"Values":[["Single",{"Int":0}],["Double",{"Int":1}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":4,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[594.8556414405191,-116.86649900152338],"Size":[108.890625,80.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":8},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":11},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":5},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":7},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":3},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":1,"Metadata":{"ScriptingName":"ISF Shader","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[-46.59061950118641,-264.88592925177966],"Size":[99.53125,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"DESCRIPTION\": \"a pixel sorting exploration.\",\n  \"CREDIT\": \"Andrea Bovo <spleen666@gmail.com>\",\n  \"CATEGORIES\": [\n    \"feedback\",\n    \"trails\",\n    \"pixelsort\",\n    \"video\"\n  ],\n  \"INPUTS\": [\n      {\n        \"NAME\": \"inputImage\",\n        \"TYPE\": \"image\"\n      },\n      {\n\t    \"NAME\": \"stepx\",\n\t    \"TYPE\": \"float\",\n\t    \"MIN\": 1,\n\t    \"MAX\": 5,\n\t    \"DEFAULT\": 2\n\t  },\n      {\n\t    \"NAME\": \"stepy\",\n\t    \"TYPE\": \"float\",\n\t    \"MIN\": 1,\n\t    \"MAX\": 5,\n\t    \"DEFAULT\": 2\n\t  },\n      {\n        \"NAME\": \"stepFade\",\n        \"TYPE\": \"float\",\n        \"MIN\": 1,\n        \"MAX\": 100,\n        \"DEFAULT\": 50\n      },\n      {\n\t\t\t\"NAME\": \"center\",\n\t\t\t\"TYPE\": \"point2D\",\n\t\t\t\"DEFAULT\": [\n\t\t\t\t0.0,\n\t\t\t\t0.0\n\t\t\t]\n\t\t}\n  ],\n  \"PASSES\": [\n    {\n      \"PERSISTENT\": true,\n      \"TARGET\": \"BufferA\",\n      \"WIDTH\": \"$WIDTH/1.0\",\n\t  \"HEIGHT\": \"$HEIGHT/1.0\"\n    },\n    {\n    }\n  ]\n}\n*/\n\n#define R RENDERSIZE\n#define t TIME\n\n#define GAMMA 2.0\n// sRGB -> linear\n#define degamma( rgba ) ( pow(max(rgba, 0.), vec4(GAMMA)) )\n// linear -> sRGB\n#define gamma( rgba ) ( pow(max(rgba, 0.), vec4(1./GAMMA)) )\n\n// sRGB -> linear / linear -> sRGB - optimized\n#define degammao( rgba ) ( rgba*rgba )\n#define gammao( rgba ) ( sqrt(rgba) )\n\n#define HOLYGREY vec4(0.2126, 0.7152, 0.0722, 0.)\n#define luma( rgba ) ( dot(rgba, HOLYGREY) )\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / R.xy;\n    vec4 col = vec4(0.0);\n    //\n    if (PASSINDEX == 0)\t{\n        \n\t   vec2 texel = 1. / R.xy;\n\n      float step_y = texel.y;\n      float step_x = texel.x;\n\n\t   vec2 s = vec2(0., -step_y);\n\t   vec2 n = vec2(0., step_y);\n\n\t   vec4 im_n = IMG_NORM_PIXEL(BufferA, uv + n);\n\t   vec4 im = IMG_NORM_PIXEL(BufferA, uv);\n\t   vec4 im_s = IMG_NORM_PIXEL(BufferA, uv + s);\n\t   \n\t   im = degammao(im);\n\t   im_s = degammao(im_s);\n\t   im_n = degammao(im_n);\n\n\t   float len_n = luma(im_n);\n\t   float len = luma(im);\n\t   float len_s = luma(im_s);\n\t   \n\t   int frame = int( mod( float(FRAMEINDEX) + gl_FragCoord.y, stepy  ));\n        /**if (len_s > len) {\n\t       im = im_s;\n\t    } else if (len_n < len) {\n\t       im = im_n;\n\t    }*/\n\t   if( frame == 0 ) {\n\t    if (len_s > len) {\n\t       im = im_s;\n\t    }\n\t   } else if (len_n <= len) {\n\t       im = im_n;\n\t   }\n\t   \n\t   col = IMG_NORM_PIXEL(inputImage, uv);\n       col = degammao(col);\n\t    \n       col = (col + im * (stepFade - 1.0) ) / stepFade;\n       col = gammao(col);\n       \n       gl_FragColor = col;\n       \n\t} else if (PASSINDEX == 1){\n\t    col = IMG_NORM_PIXEL(BufferA, uv);\n        gl_FragColor = col;\n    }\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"stepx","Exposed":"stepx","Value":{"Float":2.0554544925689697},"Domain":{"Float":{"Min":1.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"stepy","Exposed":"stepy","Value":{"Float":1.9887878894805908},"Domain":{"Float":{"Min":1.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"stepFade","Exposed":"stepfade","Value":{"Float":5.672500133514404},"Domain":{"Float":{"Min":1.0,"Max":100.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"center","Exposed":"center","Value":{"Vec2f":[0.4683181941509247,0.7683500051498413]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":3,"Metadata":{"ScriptingName":"Gamma Correction","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":17287200000,"Height":300.0,"StartOffset":0,"LoopDuration":17287200000,"Pos":[396.98269692101155,-94.2111203809965],"Size":[148.15625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by zoidberg\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Color Adjustment\", \"Utility\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"gamma\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.5\n\t\t}\n\t]\n}*/\n\n\n\nvoid main() {\n\t//\tthe input gamma range is 0.0-1.0 (normalized).  the actual gamma range i want to use is 0.0 - 5.0.\n\t//\thowever, actual gamma 0.0-1.0 is just as interesting as actual gamma 1.0-5.0, so we scale the normalized input to match...\n\tfloat\t\trealGamma = (gamma<=0.5) ? (gamma * 2.0) : (((gamma-0.5) * 2.0 * 4.0) + 1.0);\n\tvec4\t\ttmpColorA = IMG_THIS_PIXEL(inputImage);\n\tvec4\t\ttmpColorB;\n\ttmpColorB.rgb = pow(tmpColorA.rgb, vec3(1.0/realGamma));\n\ttmpColorB.a = tmpColorA.a;\n\tgl_FragColor = tmpColorB;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"gamma","Exposed":"gamma","Value":{"Float":0.20036184787750244},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]}],"SmallViewRack":[{"Processes":[1,3,4,5,6,7,9,10,11,12,13],"Process":null,"Height":479.0,"Nodal":true}],"FullViewRack":[{"Process":0,"Nodal":true}],"DefaultDuration":17287200000,"MinDuration":17287200000,"MaxDuration":17287200000,"GuiDuration":19015920000,"Speed":1.0,"Rigidity":false,"MinNull":true,"MaxInf":true,"Signatures":[],"StartState":4,"EndState":5,"StartDate":0,"HeightPercentage":0.13866666666666666,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":24696000.0,"Center":0,"ViewMode":1,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":5,"Metadata":{"ScriptingName":"Interval.pins66","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Graphal":true,"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":0,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"StartState":7,"EndState":0,"StartDate":0,"HeightPercentage":0.04},{"ObjectName":"Scenario::IntervalModel","id":6,"Metadata":{"ScriptingName":"Interval.goff28","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Graphal":true,"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":0,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"StartState":8,"EndState":9,"StartDate":18516608510,"HeightPercentage":0.035333333333333335}],"Comments":[]}],"SmallViewRack":[],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":10584000000,"MinDuration":10584000000,"MaxDuration":11113200000,"GuiDuration":22377483333,"Speed":1.0,"Rigidity":false,"MinNull":false,"MaxInf":true,"Signatures":[[0,[4,4]]],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.0,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":31741111.111111112,"Center":10268249444,"ViewMode":0,"SmallViewShown":false,"HasSignature":true},"StartTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},"EndTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.end","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10584000000,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},"StartEvent":{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},"EndEvent":{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.end","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":10584000000,"Offset":0},"StartState":{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":0,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},"EndState":{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.end","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":0,"NextConstraint":null,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}},"Speed":1.0,"Cables":[{"ObjectName":"Process::Cable","id":22,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":21,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":12},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":3},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":20,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":5},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":12},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":19,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":11},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":18,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":11},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":17,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":10},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":4}]},{"ObjectName":"Process::Cable","id":16,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":10},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":15,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":9},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":14,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":9},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":13,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":7},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":12,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":7},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":11,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":5},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":10,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"Process::ProcessModel","ObjectId":6},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":5},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":8,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":5},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":7,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":3},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":6,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":1,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":1},{"ObjectName":"VideoProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":2,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"VideoProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":3,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":3},{"ObjectName":"VideoProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":4},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]}],"BusIntervals":[]},"Plugins":[{"uuid":"1f923578-08c3-49be-9ba9-69c144ee2e32","Refresh":false,"Reconnect":false,"MidiRatio":1.0},{"uuid":"6e610e1f-9de2-4c36-90dd-0ef570002a21","RootNode":{},"Children":[{"Device":{"Name":"Window","Protocol":"5a181207-7d40-4ad8-814e-879fcdf8cc31"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":100}},"Name":"screen"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Name":"position"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"cursor"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[0.0,0.0],"Values":[[],[]]}},"Name":"absolute"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"tablet"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1280.0,720.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"z"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"pressure"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}},"Name":"tangential"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}},"Name":"rotation"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_x"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_y"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1280.0,720.0]},"Domain":{},"Name":"size"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Extended":{"description":"Set to [0, 0] to use the viewport's size"},"Name":"rendersize"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"key"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"fullscreen"}}]}]}],"Version":4,"Commit":"3256ac1de3d8289f1f9b1cdc93b4ec29d9d1044b","Tag":"3.1.4"}